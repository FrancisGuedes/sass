// sass --watch scss/style.scss:css/style.css
/* @use "theme" with(
  $color-primary: rgb(39, 77, 25),
  $corner: 10px,
);

@use 'roundStuff'; */

@use 'indexCore' with(
  $color-primary: rgb(11, 11, 10),
  $corner: 10px,
);

@use 'sass:color';
@use 'sass:selector';

body {
  margin: 0;
  padding: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  color: indexCore.$color-color-white;
  header {
    background-color: indexCore.$color-color-orange-transparent;
    h1 {
      margin: 0 15px 0 0;
    }
    h2 {
      background-color: indexCore.$color-color-white;
      padding: 20px;
      color: indexCore.$color-color-orange;
    }
  }
}

section {
  background-color: rgb(199, 247, 199);
  height: calc(100vh - 100px);
  z-index: 0;
}

#chat {
  display: flex;
  flex-direction: column;
  margin: 20px;
  padding: 0px;
  list-style: none;
  z-index: 1;
  li {
    display: flex;
    margin-bottom: 32px;
    $background-color: rgb(179, 179, 179);
    .avatar {
      padding:0 16px;
      display: flex;
      align-items: flex-end;
      img {
        @include indexCore.circle;
        width: 48px;
      }
    }
    .message {
      background-color: indexCore.invert(indexCore.$color-primary); 
      flex: 1;
      border-radius: indexCore.$raid;
      border-bottom-left-radius: 0;
      padding: 10px;
      strong {
        color: rgb(57, 51, 51);
      }
      p {
        font-size: 14px;
        margin-top: 10px;
      }
      time {
        font-size: 12px;
        letter-spacing: 1px;
        opacity: .65;
        color: indexCore.$color-color-orange;
      }
    }
    
    .menu {
      display: flex;
      align-items: center;
      button {
        border: none;
        background: none;
        outline: none;
        img {
          height: 10px;
          width: 10px;
          opacity: 0.5;
          cursor: pointer;
        }
      }
    }
    &.my {
    $background-color: rgb(200, 23, 147);
    flex-direction: row-reverse;
    .message {
      background-color: $background-color;
      border-bottom-left-radius: indexCore.$raid;
      border-bottom-right-radius: 0;
      ::selection {
        background: white;
        color: #000;
      }
    }
    strong {
      display: none;
    }
  }
  }
}

.error {
  background-color: rgb(207, 2, 2);
  border: 1px solid rgb(223, 120, 120);
  margin: 10px;
  padding: 20px;
  &--serious {
    @extend .error;
    border-width: 4px;
  }
}

@mixin field($child) {
  @at-root #{selector.unify(&, $child)} {
      padding: 10px;
      margin: 10px;
      border: 1px solid #999;
      @content
  }
}

// AT ROOT end
.wrapper {
  display: flex;
  flex-direction: column;
  .field {
    @include field("input");
    @include field("select");
  }
}

@mixin avatar($size, $circle: false){
  $width: $size;
  $height: $size;
  @if $circle {
    $border-radius: $tamanho / 2;
  }
}

.form .photo {
  @include avatar(50px);
}
// AT ROOT end

$sizes: ("xs": 20px, "sm": 40px, "md": 60px);

@each $key, $value in $sizes {
  .#{$key} {
    width: $value;
    height: $value;
    border-radius: 50%;
  }
}

// FOR BEGIN
$base-color: #036;

@for $i from 1 through 3 {
  ul:nth-child(3n + #{$i}){
    background-color: color.adjust($base-color, $lightness: $i * 15%);
  }
} 
// FOR END

// WHILE BEGIN
@function scale-below($value, $base: 16px, $ratio: 1.618) {
  @while $value > $base {
    $value: $value/$ratio;
  }
  @return $value;
}

$normal: 20px;

p.f-code {
  font-size: $normal;
  sup {
    font-size: scale-below($normal);
  }
}
// WHILE END